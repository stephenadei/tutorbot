#!/bin/bash

# TutorBot - Help Script
# Shows all available commands and shortcuts

echo "🤖 TutorBot - Available Commands"
echo "================================"
echo ""

echo "🚀 QUICK COMMANDS (aliases):"
echo "  wipe        - Wipe all contacts and conversations (short)"
echo "  wipebot     - Wipe all contacts and conversations (long)"
echo "  wipeall     - Wipe all labels and attributes (short)"
echo "  wipeallbot  - Wipe all labels and attributes (long)"
echo "  start       - Quick Docker restart (short)"
echo "  startbot    - Full Docker restart (down + up) (long)"
echo "  logs        - Show Docker logs (short)"
echo "  logsbot     - Show Docker logs (long)"
echo "  status      - Show Docker status (short)"
echo "  statusbot   - Show Docker status (long)"
echo "  validate    - Validate project structure (short)"
echo "  validatebot - Validate project structure (long)"
echo "  help        - Show all commands (short)"
echo "  helpbot     - Show all commands (long)"
echo ""

echo "🔧 DEVELOPMENT COMMANDS:"
echo "  ./dev.sh restart              # Quick restart (for env changes)"
echo "  ./dev.sh rebuild              # Rebuild and restart (for deps)"
echo "  ./dev.sh logs                 # Show live logs"
echo "  ./dev.sh clean                # Clean and rebuild everything"
echo ""

echo "🐛 DEBUG COMMANDS (aliases):"
echo "  debug       - Toggle debug mode"
echo "  debugbot    - Toggle debug mode (long)"
echo "  debugon     - Enable public debug mode"
echo "  debugoff    - Disable debug mode"
echo "  debugprivate - Enable private debug mode"
echo "  debugconsole - Enable console debug mode"
echo "  debugstatus - Show debug status"
echo ""

echo "✅ CONFIRMATION COMMANDS (aliases):"
echo "  confirm     - Toggle confirmation mode"
echo "  confirmbot  - Toggle confirmation mode (long)"
echo "  confirmon   - Enable confirmations"
echo "  confirmoff  - Disable confirmations"
echo "  confirmstatus - Show confirmation status"
echo ""

echo "📋 ENVIRONMENT COMMANDS (aliases):"
echo "  export_env  - Export environment variables from .env"
echo "  exportenv   - Export environment variables (short)"
echo "  source scripts/export_env.sh           # Manual export"
echo ""

echo "📁 PROJECT STRUCTURE:"
echo "  /home/stephen/tutorbot/"
echo "  ├── main.py                    # Core Flask application"
echo "  ├── requirements.txt           # Python dependencies"
echo "  ├── docker-compose.yml         # Docker configuration"
echo "  ├── Dockerfile                 # Docker image"
echo "  ├── .env                       # Environment variables (not in git)"
echo "  ├── env_example.txt            # Environment template"
echo "  ├── help.sh                    # This help script"
echo "  ├── tests/                     # Test files and test runner"
echo "  │   ├── run_tests.py           # Main test runner"
echo "  │   ├── test_main.py           # Main application tests"
echo "  │   ├── test_config.py         # Test configuration"
echo "  │   ├── test_prefill_overview.py # Test prefill functionality"
echo "  │   └── test_setup.py          # Test setup utilities"
echo "  ├── scripts/                   # All shell scripts and Python utilities"
echo "  │   ├── cw_api.py              # Chatwoot API utilities"
echo "  │   ├── show_prefill_overview.py # Show prefill overview"
echo "  ├── config/                    # Configuration files"
echo "  │   ├── contact_attributes.yaml"
echo "  │   ├── conversation_attributes.yaml"
echo "  │   ├── labels_lean.yaml"
echo "  │   └── automations.yaml"
echo "  ├── scripts/                   # All shell scripts and Python utilities"
echo "  │   ├── README.md              # Scripts documentation"
echo "  │   ├── dev.sh                 # Development shortcuts"
echo "  │   ├── wipe.sh                # Quick contact wipe script"
echo "  │   ├── wipe_all.sh            # Quick data wipe script"
echo "  │   ├── debug_*.sh             # Debug management scripts"
echo "  │   ├── confirm_*.sh           # Confirmation management scripts"
echo "  │   ├── export_env.sh          # Environment export script"
echo "  │   ├── setup_attributes.py    # Setup custom attributes"
echo "  │   ├── setup_labels.py        # Setup labels"
echo "  │   ├── setup_all.py           # Setup everything"
echo "  │   ├── setup_automation_rules.py"
echo "  │   ├── setup_chatwoot.py      # Setup Chatwoot configuration"
echo "  │   ├── wipe_contacts.py       # Manual contact wipe"
echo "  │   ├── wipe_all.py            # Manual data wipe"
echo "  │   ├── cleanup_all.py         # Clean up all data"
echo "  │   ├── validate_structure.py  # Validate project structure"
echo "  │   ├── audit_attributes.py    # Audit custom attributes"
echo "  │   ├── analyze_logs.py        # Analyze log files"
echo "  │   ├── check_inboxes.py       # Check inbox status"
echo "  │   ├── list_contact_languages.py"
echo "  │   ├── list_automation.py     # List automation rules"
echo "  │   ├── test_real_message.py   # Test with real message"
echo "  │   ├── test_real_conversation.py"
echo "  │   ├── test_bot.py            # Test bot functionality"
echo "  │   ├── test_chatwoot_api.py   # Test Chatwoot API"
echo "  │   └── test_input_select.py   # Test input selection"
echo "  ├── docker/                    # Docker documentation"
echo "  │   └── README.md              # Docker setup and usage"
echo "  └── docs/                      # Documentation"
echo "      └── README_chatwoot_setup.md"
echo ""

echo "🔧 SETUP COMMANDS:"
echo "  python3 scripts/setup_all.py           # Setup everything (attributes + labels)"
echo "  python3 scripts/setup_attributes.py    # Setup custom attributes only"
echo "  python3 scripts/setup_labels.py        # Setup labels only"
echo "  python3 scripts/setup_automation_rules.py  # Setup automation rules"
echo "  python3 scripts/setup_chatwoot.py      # Setup Chatwoot configuration"
echo "  python3 scripts/validate_structure.py  # Validate project structure"
echo ""

echo "🧪 TESTING COMMANDS:"
echo "  ./scripts/wipe.sh                      # Quick contact wipe (automatic)"
echo "  ./scripts/wipe_all.sh                  # Quick data wipe (labels + attributes)"
echo "  python3 scripts/wipe_contacts.py       # Manual contact wipe"
echo "  python3 scripts/wipe_contacts.py --auto-wipe  # Auto-wipe (no confirmation)"
echo "  python3 scripts/wipe_contacts.py --force      # Manual wipe (with confirmation)"
echo "  python3 scripts/wipe_all.py            # Manual data wipe"
echo "  python3 scripts/wipe_all.py --auto-wipe       # Auto data wipe (no confirmation)"
echo "  python3 scripts/cleanup_all.py         # Clean up all data"
echo "  docker-compose restart                 # Quick restart (keep container)"
echo "  docker-compose down && docker-compose up -d  # Full restart (rebuild)"
echo "  docker-compose logs -f                 # Show live logs"
echo "  docker-compose ps                      # Show container status"
echo ""

echo "🧪 TESTING SCRIPTS:"
echo "  python3 tests/test_prefill_overview.py # Test prefill overview functionality"
echo "  python3 scripts/show_prefill_overview.py # Show prefill overview for conversation"
echo "  python3 test_real_message.py           # Test with real message"
echo "  python3 test_real_conversation.py      # Test with real conversation"
echo "  python3 test_bot.py                    # Test bot functionality"
echo "  python3 test_chatwoot_api.py           # Test Chatwoot API"
echo "  python3 test_input_select.py           # Test input selection"
echo ""

echo "🧪 COMPREHENSIVE TEST SUITE:"
echo "  python3 tests/test_setup.py            # Verify test environment setup"
echo "  python3 tests/run_tests.py             # Run all tests"
echo "  python3 tests/run_tests.py --list-categories # List available test categories"
echo "  python3 tests/run_tests.py --category core   # Run core functionality tests"
echo "  python3 tests/run_tests.py --category flow   # Run flow tests"
echo "  python3 tests/run_tests.py --category api    # Run API tests"
echo "  python3 tests/run_tests.py --test TestTranslation.test_basic_translation  # Run single test"
echo "  python3 tests/run_tests.py --verbose         # Run tests with verbose output"
echo ""

echo "🧪 TEST CATEGORIES:"
echo "  core        - Core functionality (translation, message, utility)"
echo "  flow        - User flows (intake, menu, integration)"
echo "  api         - API integration (openai, payment, webhook)"
echo "  translation - Translation system tests"
echo "  message     - Message handling tests"
echo "  openai      - OpenAI integration tests"
echo "  prefill     - Prefill functionality tests"
echo "  segment     - Segment detection tests"
echo "  planning    - Planning functionality tests"
echo "  payment     - Payment functionality tests"
echo "  intake      - Intake flow tests"
echo "  menu        - Menu handling tests"
echo "  webhook     - Webhook handling tests"
echo "  utility     - Utility function tests"
echo "  email       - Email and payment handling tests"
echo "  integration - Integration scenario tests"
echo "  error       - Error handling tests"
echo ""

echo "📁 ORGANIZED SCRIPTS:"
echo "  ./scripts/                              # All shell scripts directory"
echo "  ./scripts/README.md                     # Scripts documentation"
echo "  ./docker/README.md                      # Docker documentation"
echo ""
echo "🔧 SCRIPT CATEGORIES:"
echo "  Development:    ./scripts/dev.sh"
echo "  Data Management: ./scripts/wipe.sh, ./scripts/wipe_all.sh"
echo "  Debug Management: ./scripts/debug_*.sh"
echo "  Confirmation:   ./scripts/confirm_*.sh"
echo "  Environment:    ./scripts/export_env.sh"
echo ""

echo "📋 ENVIRONMENT VARIABLES:"
echo "  CW_URL=https://crm.stephenadei.nl"
echo "  CW_ACC_ID=1"
echo "  CW_ADMIN_TOKEN=your_admin_token"
echo "  CW_TOKEN=your_bot_token"
echo "  CW_HMAC_SECRET=your_hmac_secret"
echo "  OPENAI_API_KEY=your_openai_key"
echo "  STRIPE_WEBHOOK_SECRET=your_stripe_secret"
echo ""

echo "🌐 WEBHOOK URL:"
echo "  https://your-domain.com/cw"
echo ""

echo "💡 TIPS:"
echo "  • Always run commands from /home/stephen/tutorbot/"
echo "  • Use aliases for quick access: wipebot, startbot, validatebot"
echo "  • Check .cursorrules for development guidelines"
echo "  • Run validatebot before making changes"
echo "  • Use ./dev.sh for development tasks"
echo "  • Use exportenv before running Python scripts directly"
echo "  • Debug commands help with troubleshooting"
echo "  • Analysis scripts help understand system state"
echo ""

echo "📚 DOCUMENTATION:"
echo "  docs/README_chatwoot_setup.md          # Complete setup guide"
echo "  .cursorrules                           # Development guidelines"
echo "  README.md                              # Project overview"
echo "  QUICK_START.md                         # Quick start guide"
echo ""

echo "🎯 QUICK START:"
echo "  1. validate                            # Validate structure"
echo "  2. exportenv                           # Export environment variables"
echo "  3. wipe                                # Clear contacts"
echo "  4. start                               # Start server"
echo "  5. Test with WhatsApp messages"
echo ""

echo "🔍 DEBUGGING & ANALYSIS:"
echo "  docker-compose logs -f tutorbot        # Live logs"
echo "  docker-compose exec tutorbot bash      # Enter container"
echo "  python3 test_prefill_overview.py       # Test prefill"
echo "  python3 scripts/analyze_logs.py        # Analyze log files"
echo "  python3 scripts/check_inboxes.py       # Check inbox status"
echo "  python3 scripts/list_contact_languages.py  # List contact languages"
echo "  python3 scripts/list_automation.py     # List automation rules"
echo "  python3 scripts/audit_attributes.py    # Audit custom attributes"
echo "  debugstatus                            # Check debug status"
echo "  confirmstatus                          # Check confirmation status"
echo "" 